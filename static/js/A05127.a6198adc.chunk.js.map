{"version":3,"file":"static/js/A05127.a6198adc.chunk.js","mappings":"sSAkCA,GA9BoBA,EAAAA,EAAAA,OAAK,SAAAC,GAAuC,IAApCC,EAAQD,EAARC,SAAUC,EAAQF,EAARE,SAAaC,GAAKC,EAAAA,EAAAA,GAAAJ,EAAAK,GACtDC,GAAwBC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAhCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAapB,OACEI,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcX,SAAA,EAC3BY,EAAAA,EAAAA,KAAA,QAAMD,UAAU,OAAOE,QAAS,kBAdvB,SAACC,GACZ,IAAMC,EAAKC,SAASC,cAAc,YAClCF,EAAGG,MAAQJ,EACXE,SAASG,KAAKC,YAAYL,GAC1BA,EAAGM,SACHL,SAASM,YAAY,QACrBN,SAASG,KAAKI,YAAYR,GAC1BN,GAAQ,GACRe,YAAW,WACTf,GAAQ,EACV,GAAG,IACL,CAG0CgB,CAAKC,OAAO1B,GAAU,EAACA,SAC1DQ,EAAO,iCAAU,kBAEpBI,EAAAA,EAAAA,KAACe,EAAAA,GAAiBC,EAAAA,EAAAA,GAAA,CAChB5B,SAAU0B,OAAO1B,GAAU6B,QAAQ,MAAO,IAC1C9B,SAAUA,EACVY,UAAU,UACVmB,OAAO,OACH7B,MAIZ,I,iECgBA,MAtCA,SAAeH,GAAW,IAARiC,EAAGjC,EAAHiC,IAChB3B,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjC4B,EAAM1B,EAAA,GAAE2B,EAAS3B,EAAA,GAQxB,OAPA4B,EAAAA,EAAAA,YAAU,WACRC,MAAMJ,GACHK,MAAK,SAACC,GAAQ,OAAKA,EAASvB,MAAM,IAClCsB,MAAK,SAACtB,GACLmB,EAAUnB,EACZ,GACJ,GAAG,CAACiB,KAEFnB,EAAAA,EAAAA,KAAA,OAAKD,UAAU,gBAAeX,UAC5BY,EAAAA,EAAAA,KAAC0B,EAAAA,EAAa,CACZtC,SAAUgC,EACVO,cAAe,CAACC,EAAAA,GAChBC,cAAe,CAACC,EAAAA,GAChBC,WAAY,CACVC,KAAI,SAAAC,GAAOA,EAAJC,KAAgD,IAA1CC,EAAMF,EAANE,OAAQpC,EAASkC,EAATlC,UAAWX,EAAQ6C,EAAR7C,SAAaC,GAAKC,EAAAA,EAAAA,GAAA2C,EAAA1C,GAC1C6C,EAAQ,iBAAiBC,KAAKtC,GAAa,IACjD,OAAQoC,GAAUC,GAChBpC,EAAAA,EAAAA,KAACe,GAAiBC,EAAAA,EAAAA,GAAA,CAChB5B,SAAU0B,OAAO1B,GAAU6B,QAAQ,MAAO,IAC1C9B,SAAUiD,EAAM,GAChBrC,UAAU,UACVmB,OAAO,OACH7B,KAGNW,EAAAA,EAAAA,KAAA,QAAAgB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAAMjB,UAAWA,GAAeV,GAAK,IAAAD,SAClCA,IAGP,MAKV,C,6MCtCE,MAJA,WACE,OAAOY,EAAAA,EAAAA,KAACsC,EAAAA,EAAQ,CAACnB,IAAKoB,GACxB,C","sources":["components/markdown/highLighter.jsx","components/markdown/index.jsx","dynamic/pages/前端知识体系(全面)/webpack/如何提高webpack构建速度.jsx"],"sourcesContent":["import React, { memo, useState } from \"react\";\nimport { Prism as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport \"./index.less\";\n\nconst Highlighter = memo(({ language, children, ...props }) => {\n  const [show, setShow] = useState(false);\n  const copy = (text) => {\n    const el = document.createElement(\"textarea\");\n    el.value = text;\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(el);\n    setShow(true);\n    setTimeout(() => {\n      setShow(false);\n    }, 1000);\n  };\n  return (\n    <div className=\"high-lighter\">\n      <span className=\"copy\" onClick={() => copy(String(children))}>\n        {show ? \"复制成功！\" : \"复制\"}\n      </span>\n      <SyntaxHighlighter\n        children={String(children).replace(/\\n$/, \"\")}\n        language={language}\n        className=\"my-code\"\n        PreTag=\"div\"\n        {...props}\n      />\n    </div>\n  );\n});\n\nexport default Highlighter;\n","import React, { useState, useEffect } from \"react\";\nimport ReactMarkdown from \"react-markdown\";\nimport remarkGfm from \"remark-gfm\";\nimport SyntaxHighlighter from \"./highLighter\";\nimport rehypeRaw from \"rehype-raw\";\n// import { tomorrow } from \"react-syntax-highlighter/dist/esm/styles/prism\";\nimport \"github-markdown-css\";\n\nimport \"./index.less\";\n\nfunction Shapes({ src }) {\n  const [mdText, setMdText] = useState(\"\");\n  useEffect(() => {\n    fetch(src)\n      .then((response) => response.text())\n      .then((text) => {\n        setMdText(text);\n      });\n  }, [src]);\n  return (\n    <div className=\"markdown-body\">\n      <ReactMarkdown\n        children={mdText}\n        rehypePlugins={[rehypeRaw]}\n        remarkPlugins={[remarkGfm]}\n        components={{\n          code({ node, inline, className, children, ...props }) {\n            const match = /language-(\\w+)/.exec(className || \"\");\n            return !inline && match ? (\n              <SyntaxHighlighter\n                children={String(children).replace(/\\n$/, \"\")}\n                language={match[1]}\n                className=\"my-code\"\n                PreTag=\"div\"\n                {...props}\n              />\n            ) : (\n              <code className={className} {...props}>\n                {children}\n              </code>\n            );\n          },\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Shapes;\n","import React from \"react\";\n  import MarkDown from \"@/components/markdown\";\n  import shape from \"@docs/前端知识体系(全面)/webpack/如何提高webpack构建速度.md\";\n  \n  function Index() {\n    return <MarkDown src={shape} />;\n  }\n  \n  export default Index;"],"names":["memo","_ref","language","children","props","_objectWithoutProperties","_excluded","_useState","useState","_useState2","_slicedToArray","show","setShow","_jsxs","className","_jsx","onClick","text","el","document","createElement","value","body","appendChild","select","execCommand","removeChild","setTimeout","copy","String","SyntaxHighlighter","_objectSpread","replace","PreTag","src","mdText","setMdText","useEffect","fetch","then","response","ReactMarkdown","rehypePlugins","rehypeRaw","remarkPlugins","remarkGfm","components","code","_ref2","node","inline","match","exec","MarkDown","shape"],"sourceRoot":""}